/* Variables */

:root {
  --blade-hue: 120;
  --blade-lightness: 50%;
}

/* reset */
/* https://piccalil.li/blog/a-modern-css-reset */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}
/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* General Styling */
body {
  background: #222;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: 100px 50px 1fr;
  min-height: 100vh;
  place-items: center;
  font-family: "Sourse sans Pro", sans-serif;
  text-transform: uppercase;
  font-size: 1.5rem;
}

/* color selector*/
[name="color"] {
  grid-row: 1/2;
  align-self: end;
  margin: 0.5em;
}

label:not(.hilt) {
  color: white;
  font-weight: bold;
  align-self: start;
}

/* ligthsaber styling */

.lightSaber {
  margin-top: 25vh;
  grid-column: 1 / -1;
  position: relative;
}

#on-off {
  position: absolute;
  width: 0;
  height: 0;
}

.hilt {
  display: block;
  width: 0.75rem;
  height: 7rem;
  background-color: red;
  border-radius: 0 0 4px 4px;
  background-image: linear-gradient(
    silver 0 10px,
    red 0 15px,
    silver 0 17px,
    black 0 20px,
    silver 0 22px,
    black 0 25px,
    silver 0 27px,
    black 0 30px,
    silver 0 32px,
    black 0 35px,
    silver 0 37px,
    black 0 40px,
    silver 0 45px,
    orange 0 55px,
    silver 0 100%
  );
}

.blade {
  position: absolute;
  background: white;
  height: 350%;
  width: 100%;
  bottom: 100%;
  border-radius: 100vw 100vw 0 0;
  box-shadow: inset 0 0 4px hsl(var(--blade-hue) 100% var(--blade-lightness) / 1), 0 0 1em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.8),
    0 0 1.5em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.7), 0 0 2em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.5),
    0 0 3em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.3), 0 0 5em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.2);
  transition: transform 50ms ease-out;
  transform-origin: bottom;
}

.blade::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: hsl(var(--blade-hue) 100% var(--blade-lightness));
  border-radius: inherit;
  filter: blur(0.5em);
  opacity: 1;
  animation: pulse linear 5s infinite;
}

.blade::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: white;
  border-radius: inherit;
  z-index: 10;
}

@keyframes pulse {
  50% {
    opacity: 1;
  }
}

/* turn on / off */

#on-off:not(checked) + .blade {
  transform: scaleY(0);
}

#on-off:checked + .blade {
  transform: scaleY(1);
}

/* change the color */

#green:checked ~ .lightSaber {
  --blade-hue: 120;
}

#blue:checked ~ .lightSaber {
  --blade-hue: 195;
}

#yellow:checked ~ .lightSaber {
  --blade-hue: 60;
}

#purple:checked ~ .lightSaber {
  --blade-hue: 290;
}

#red:checked ~ .lightSaber {
  --blade-hue: 360;
}

#darksaber:checked ~ .lightSaber {
  --blade-lightness: 100%;
}

#darksaber:checked ~ .lightSaber .blade {
  border-radius: 100% / 500px 10px 0 0;
}

#darksaber:checked ~ .lightSaber .blade::before {
  background: black;
}

/* sound */

embed {
  display: none;
  position: absolute;
  opacity: 0;
  pointer-events: 0;
  width: 0;
  height: 0;
}

#on-off:checked ~ embed {
  display: block;
}
